/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SP {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    ANNOTATION_LABEL	= 5,
    KILL	= 6,
    EXTRACT_SUBREG	= 7,
    INSERT_SUBREG	= 8,
    IMPLICIT_DEF	= 9,
    SUBREG_TO_REG	= 10,
    COPY_TO_REGCLASS	= 11,
    DBG_VALUE	= 12,
    REG_SEQUENCE	= 13,
    COPY	= 14,
    BUNDLE	= 15,
    LIFETIME_START	= 16,
    LIFETIME_END	= 17,
    STACKMAP	= 18,
    FENTRY_CALL	= 19,
    PATCHPOINT	= 20,
    LOAD_STACK_GUARD	= 21,
    STATEPOINT	= 22,
    LOCAL_ESCAPE	= 23,
    FAULTING_OP	= 24,
    PATCHABLE_OP	= 25,
    PATCHABLE_FUNCTION_ENTER	= 26,
    PATCHABLE_RET	= 27,
    PATCHABLE_FUNCTION_EXIT	= 28,
    PATCHABLE_TAIL_CALL	= 29,
    PATCHABLE_EVENT_CALL	= 30,
    G_ADD	= 31,
    G_SUB	= 32,
    G_MUL	= 33,
    G_SDIV	= 34,
    G_UDIV	= 35,
    G_SREM	= 36,
    G_UREM	= 37,
    G_AND	= 38,
    G_OR	= 39,
    G_XOR	= 40,
    G_IMPLICIT_DEF	= 41,
    G_PHI	= 42,
    G_FRAME_INDEX	= 43,
    G_GLOBAL_VALUE	= 44,
    G_EXTRACT	= 45,
    G_UNMERGE_VALUES	= 46,
    G_INSERT	= 47,
    G_MERGE_VALUES	= 48,
    G_PTRTOINT	= 49,
    G_INTTOPTR	= 50,
    G_BITCAST	= 51,
    G_LOAD	= 52,
    G_STORE	= 53,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 54,
    G_ATOMIC_CMPXCHG	= 55,
    G_ATOMICRMW_XCHG	= 56,
    G_ATOMICRMW_ADD	= 57,
    G_ATOMICRMW_SUB	= 58,
    G_ATOMICRMW_AND	= 59,
    G_ATOMICRMW_NAND	= 60,
    G_ATOMICRMW_OR	= 61,
    G_ATOMICRMW_XOR	= 62,
    G_ATOMICRMW_MAX	= 63,
    G_ATOMICRMW_MIN	= 64,
    G_ATOMICRMW_UMAX	= 65,
    G_ATOMICRMW_UMIN	= 66,
    G_BRCOND	= 67,
    G_BRINDIRECT	= 68,
    G_INTRINSIC	= 69,
    G_INTRINSIC_W_SIDE_EFFECTS	= 70,
    G_ANYEXT	= 71,
    G_TRUNC	= 72,
    G_CONSTANT	= 73,
    G_FCONSTANT	= 74,
    G_VASTART	= 75,
    G_VAARG	= 76,
    G_SEXT	= 77,
    G_ZEXT	= 78,
    G_SHL	= 79,
    G_LSHR	= 80,
    G_ASHR	= 81,
    G_ICMP	= 82,
    G_FCMP	= 83,
    G_SELECT	= 84,
    G_UADDE	= 85,
    G_USUBE	= 86,
    G_SADDO	= 87,
    G_SSUBO	= 88,
    G_UMULO	= 89,
    G_SMULO	= 90,
    G_UMULH	= 91,
    G_SMULH	= 92,
    G_FADD	= 93,
    G_FSUB	= 94,
    G_FMUL	= 95,
    G_FMA	= 96,
    G_FDIV	= 97,
    G_FREM	= 98,
    G_FPOW	= 99,
    G_FEXP	= 100,
    G_FEXP2	= 101,
    G_FLOG	= 102,
    G_FLOG2	= 103,
    G_FNEG	= 104,
    G_FPEXT	= 105,
    G_FPTRUNC	= 106,
    G_FPTOSI	= 107,
    G_FPTOUI	= 108,
    G_SITOFP	= 109,
    G_UITOFP	= 110,
    G_GEP	= 111,
    G_PTR_MASK	= 112,
    G_BR	= 113,
    G_INSERT_VECTOR_ELT	= 114,
    G_EXTRACT_VECTOR_ELT	= 115,
    G_SHUFFLE_VECTOR	= 116,
    G_BSWAP	= 117,
    ADDCCri	= 118,
    ADDCCrr	= 119,
    ADDCri	= 120,
    ADDCrr	= 121,
    ADDEri	= 122,
    ADDErr	= 123,
    ADDXC	= 124,
    ADDXCCC	= 125,
    ADDXri	= 126,
    ADDXrr	= 127,
    ADDri	= 128,
    ADDrr	= 129,
    ADJCALLSTACKDOWN	= 130,
    ADJCALLSTACKUP	= 131,
    ALIGNADDR	= 132,
    ALIGNADDRL	= 133,
    ANDCCri	= 134,
    ANDCCrr	= 135,
    ANDNCCri	= 136,
    ANDNCCrr	= 137,
    ANDNri	= 138,
    ANDNrr	= 139,
    ANDXNrr	= 140,
    ANDXri	= 141,
    ANDXrr	= 142,
    ANDri	= 143,
    ANDrr	= 144,
    ARRAY16	= 145,
    ARRAY32	= 146,
    ARRAY8	= 147,
    BA	= 148,
    BCOND	= 149,
    BCONDA	= 150,
    BINDri	= 151,
    BINDrr	= 152,
    BMASK	= 153,
    BPFCC	= 154,
    BPFCCA	= 155,
    BPFCCANT	= 156,
    BPFCCNT	= 157,
    BPGEZapn	= 158,
    BPGEZapt	= 159,
    BPGEZnapn	= 160,
    BPGEZnapt	= 161,
    BPGZapn	= 162,
    BPGZapt	= 163,
    BPGZnapn	= 164,
    BPGZnapt	= 165,
    BPICC	= 166,
    BPICCA	= 167,
    BPICCANT	= 168,
    BPICCNT	= 169,
    BPLEZapn	= 170,
    BPLEZapt	= 171,
    BPLEZnapn	= 172,
    BPLEZnapt	= 173,
    BPLZapn	= 174,
    BPLZapt	= 175,
    BPLZnapn	= 176,
    BPLZnapt	= 177,
    BPNZapn	= 178,
    BPNZapt	= 179,
    BPNZnapn	= 180,
    BPNZnapt	= 181,
    BPXCC	= 182,
    BPXCCA	= 183,
    BPXCCANT	= 184,
    BPXCCNT	= 185,
    BPZapn	= 186,
    BPZapt	= 187,
    BPZnapn	= 188,
    BPZnapt	= 189,
    BSHUFFLE	= 190,
    CALL	= 191,
    CALLri	= 192,
    CALLrr	= 193,
    CASAasi10	= 194,
    CASArr	= 195,
    CASXrr	= 196,
    CASrr	= 197,
    CBCOND	= 198,
    CBCONDA	= 199,
    CMASK16	= 200,
    CMASK32	= 201,
    CMASK8	= 202,
    CMPri	= 203,
    CMPrr	= 204,
    EDGE16	= 205,
    EDGE16L	= 206,
    EDGE16LN	= 207,
    EDGE16N	= 208,
    EDGE32	= 209,
    EDGE32L	= 210,
    EDGE32LN	= 211,
    EDGE32N	= 212,
    EDGE8	= 213,
    EDGE8L	= 214,
    EDGE8LN	= 215,
    EDGE8N	= 216,
    EH_SJLJ_LONGJMP32ri	= 217,
    EH_SJLJ_LONGJMP32rr	= 218,
    EH_SJLJ_SETJMP32ri	= 219,
    EH_SJLJ_SETJMP32rr	= 220,
    FABSD	= 221,
    FABSQ	= 222,
    FABSS	= 223,
    FADDD	= 224,
    FADDQ	= 225,
    FADDS	= 226,
    FALIGNADATA	= 227,
    FAND	= 228,
    FANDNOT1	= 229,
    FANDNOT1S	= 230,
    FANDNOT2	= 231,
    FANDNOT2S	= 232,
    FANDS	= 233,
    FBCOND	= 234,
    FBCONDA	= 235,
    FCHKSM16	= 236,
    FCMPD	= 237,
    FCMPEQ16	= 238,
    FCMPEQ32	= 239,
    FCMPGT16	= 240,
    FCMPGT32	= 241,
    FCMPLE16	= 242,
    FCMPLE32	= 243,
    FCMPNE16	= 244,
    FCMPNE32	= 245,
    FCMPQ	= 246,
    FCMPS	= 247,
    FDIVD	= 248,
    FDIVQ	= 249,
    FDIVS	= 250,
    FDMULQ	= 251,
    FDTOI	= 252,
    FDTOQ	= 253,
    FDTOS	= 254,
    FDTOX	= 255,
    FEXPAND	= 256,
    FHADDD	= 257,
    FHADDS	= 258,
    FHSUBD	= 259,
    FHSUBS	= 260,
    FITOD	= 261,
    FITOQ	= 262,
    FITOS	= 263,
    FLCMPD	= 264,
    FLCMPS	= 265,
    FLUSH	= 266,
    FLUSHW	= 267,
    FLUSHri	= 268,
    FLUSHrr	= 269,
    FMEAN16	= 270,
    FMOVD	= 271,
    FMOVD_FCC	= 272,
    FMOVD_ICC	= 273,
    FMOVD_XCC	= 274,
    FMOVQ	= 275,
    FMOVQ_FCC	= 276,
    FMOVQ_ICC	= 277,
    FMOVQ_XCC	= 278,
    FMOVRGEZD	= 279,
    FMOVRGEZQ	= 280,
    FMOVRGEZS	= 281,
    FMOVRGZD	= 282,
    FMOVRGZQ	= 283,
    FMOVRGZS	= 284,
    FMOVRLEZD	= 285,
    FMOVRLEZQ	= 286,
    FMOVRLEZS	= 287,
    FMOVRLZD	= 288,
    FMOVRLZQ	= 289,
    FMOVRLZS	= 290,
    FMOVRNZD	= 291,
    FMOVRNZQ	= 292,
    FMOVRNZS	= 293,
    FMOVRZD	= 294,
    FMOVRZQ	= 295,
    FMOVRZS	= 296,
    FMOVS	= 297,
    FMOVS_FCC	= 298,
    FMOVS_ICC	= 299,
    FMOVS_XCC	= 300,
    FMUL8SUX16	= 301,
    FMUL8ULX16	= 302,
    FMUL8X16	= 303,
    FMUL8X16AL	= 304,
    FMUL8X16AU	= 305,
    FMULD	= 306,
    FMULD8SUX16	= 307,
    FMULD8ULX16	= 308,
    FMULQ	= 309,
    FMULS	= 310,
    FNADDD	= 311,
    FNADDS	= 312,
    FNAND	= 313,
    FNANDS	= 314,
    FNEGD	= 315,
    FNEGQ	= 316,
    FNEGS	= 317,
    FNHADDD	= 318,
    FNHADDS	= 319,
    FNMULD	= 320,
    FNMULS	= 321,
    FNOR	= 322,
    FNORS	= 323,
    FNOT1	= 324,
    FNOT1S	= 325,
    FNOT2	= 326,
    FNOT2S	= 327,
    FNSMULD	= 328,
    FONE	= 329,
    FONES	= 330,
    FOR	= 331,
    FORNOT1	= 332,
    FORNOT1S	= 333,
    FORNOT2	= 334,
    FORNOT2S	= 335,
    FORS	= 336,
    FPACK16	= 337,
    FPACK32	= 338,
    FPACKFIX	= 339,
    FPADD16	= 340,
    FPADD16S	= 341,
    FPADD32	= 342,
    FPADD32S	= 343,
    FPADD64	= 344,
    FPMERGE	= 345,
    FPSUB16	= 346,
    FPSUB16S	= 347,
    FPSUB32	= 348,
    FPSUB32S	= 349,
    FQTOD	= 350,
    FQTOI	= 351,
    FQTOS	= 352,
    FQTOX	= 353,
    FSLAS16	= 354,
    FSLAS32	= 355,
    FSLL16	= 356,
    FSLL32	= 357,
    FSMULD	= 358,
    FSQRTD	= 359,
    FSQRTQ	= 360,
    FSQRTS	= 361,
    FSRA16	= 362,
    FSRA32	= 363,
    FSRC1	= 364,
    FSRC1S	= 365,
    FSRC2	= 366,
    FSRC2S	= 367,
    FSRL16	= 368,
    FSRL32	= 369,
    FSTOD	= 370,
    FSTOI	= 371,
    FSTOQ	= 372,
    FSTOX	= 373,
    FSUBD	= 374,
    FSUBQ	= 375,
    FSUBS	= 376,
    FXNOR	= 377,
    FXNORS	= 378,
    FXOR	= 379,
    FXORS	= 380,
    FXTOD	= 381,
    FXTOQ	= 382,
    FXTOS	= 383,
    FZERO	= 384,
    FZEROS	= 385,
    GETPCX	= 386,
    JMPLri	= 387,
    JMPLrr	= 388,
    LDArr	= 389,
    LDCSRri	= 390,
    LDCSRrr	= 391,
    LDCri	= 392,
    LDCrr	= 393,
    LDDArr	= 394,
    LDDCri	= 395,
    LDDCrr	= 396,
    LDDFArr	= 397,
    LDDFri	= 398,
    LDDFrr	= 399,
    LDDri	= 400,
    LDDrr	= 401,
    LDFArr	= 402,
    LDFSRri	= 403,
    LDFSRrr	= 404,
    LDFri	= 405,
    LDFrr	= 406,
    LDQFArr	= 407,
    LDQFri	= 408,
    LDQFrr	= 409,
    LDSBArr	= 410,
    LDSBri	= 411,
    LDSBrr	= 412,
    LDSHArr	= 413,
    LDSHri	= 414,
    LDSHrr	= 415,
    LDSTUBArr	= 416,
    LDSTUBri	= 417,
    LDSTUBrr	= 418,
    LDSWri	= 419,
    LDSWrr	= 420,
    LDUBArr	= 421,
    LDUBri	= 422,
    LDUBrr	= 423,
    LDUHArr	= 424,
    LDUHri	= 425,
    LDUHrr	= 426,
    LDXFSRri	= 427,
    LDXFSRrr	= 428,
    LDXri	= 429,
    LDXrr	= 430,
    LDri	= 431,
    LDrr	= 432,
    LEAX_ADDri	= 433,
    LEA_ADDri	= 434,
    LZCNT	= 435,
    MEMBARi	= 436,
    MOVDTOX	= 437,
    MOVFCCri	= 438,
    MOVFCCrr	= 439,
    MOVICCri	= 440,
    MOVICCrr	= 441,
    MOVRGEZri	= 442,
    MOVRGEZrr	= 443,
    MOVRGZri	= 444,
    MOVRGZrr	= 445,
    MOVRLEZri	= 446,
    MOVRLEZrr	= 447,
    MOVRLZri	= 448,
    MOVRLZrr	= 449,
    MOVRNZri	= 450,
    MOVRNZrr	= 451,
    MOVRRZri	= 452,
    MOVRRZrr	= 453,
    MOVSTOSW	= 454,
    MOVSTOUW	= 455,
    MOVWTOS	= 456,
    MOVXCCri	= 457,
    MOVXCCrr	= 458,
    MOVXTOD	= 459,
    MULSCCri	= 460,
    MULSCCrr	= 461,
    MULXri	= 462,
    MULXrr	= 463,
    NOP	= 464,
    ORCCri	= 465,
    ORCCrr	= 466,
    ORNCCri	= 467,
    ORNCCrr	= 468,
    ORNri	= 469,
    ORNrr	= 470,
    ORXNrr	= 471,
    ORXri	= 472,
    ORXrr	= 473,
    ORri	= 474,
    ORrr	= 475,
    PDIST	= 476,
    PDISTN	= 477,
    POPCrr	= 478,
    RDASR	= 479,
    RDPR	= 480,
    RDPSR	= 481,
    RDTBR	= 482,
    RDWIM	= 483,
    RESTOREri	= 484,
    RESTORErr	= 485,
    RET	= 486,
    RETL	= 487,
    RETTri	= 488,
    RETTrr	= 489,
    SAVEri	= 490,
    SAVErr	= 491,
    SDIVCCri	= 492,
    SDIVCCrr	= 493,
    SDIVXri	= 494,
    SDIVXrr	= 495,
    SDIVri	= 496,
    SDIVrr	= 497,
    SELECT_CC_DFP_FCC	= 498,
    SELECT_CC_DFP_ICC	= 499,
    SELECT_CC_FP_FCC	= 500,
    SELECT_CC_FP_ICC	= 501,
    SELECT_CC_Int_FCC	= 502,
    SELECT_CC_Int_ICC	= 503,
    SELECT_CC_QFP_FCC	= 504,
    SELECT_CC_QFP_ICC	= 505,
    SET	= 506,
    SETHIXi	= 507,
    SETHIi	= 508,
    SHUTDOWN	= 509,
    SIAM	= 510,
    SLLXri	= 511,
    SLLXrr	= 512,
    SLLri	= 513,
    SLLrr	= 514,
    SMACri	= 515,
    SMACrr	= 516,
    SMULCCri	= 517,
    SMULCCrr	= 518,
    SMULri	= 519,
    SMULrr	= 520,
    SRAXri	= 521,
    SRAXrr	= 522,
    SRAri	= 523,
    SRArr	= 524,
    SRLXri	= 525,
    SRLXrr	= 526,
    SRLri	= 527,
    SRLrr	= 528,
    STArr	= 529,
    STBAR	= 530,
    STBArr	= 531,
    STBri	= 532,
    STBrr	= 533,
    STCSRri	= 534,
    STCSRrr	= 535,
    STCri	= 536,
    STCrr	= 537,
    STDArr	= 538,
    STDCQri	= 539,
    STDCQrr	= 540,
    STDCri	= 541,
    STDCrr	= 542,
    STDFArr	= 543,
    STDFQri	= 544,
    STDFQrr	= 545,
    STDFri	= 546,
    STDFrr	= 547,
    STDri	= 548,
    STDrr	= 549,
    STFArr	= 550,
    STFSRri	= 551,
    STFSRrr	= 552,
    STFri	= 553,
    STFrr	= 554,
    STHArr	= 555,
    STHri	= 556,
    STHrr	= 557,
    STQFArr	= 558,
    STQFri	= 559,
    STQFrr	= 560,
    STXFSRri	= 561,
    STXFSRrr	= 562,
    STXri	= 563,
    STXrr	= 564,
    STri	= 565,
    STrr	= 566,
    SUBCCri	= 567,
    SUBCCrr	= 568,
    SUBCri	= 569,
    SUBCrr	= 570,
    SUBEri	= 571,
    SUBErr	= 572,
    SUBXri	= 573,
    SUBXrr	= 574,
    SUBri	= 575,
    SUBrr	= 576,
    SWAPArr	= 577,
    SWAPri	= 578,
    SWAPrr	= 579,
    TA3	= 580,
    TA5	= 581,
    TADDCCTVri	= 582,
    TADDCCTVrr	= 583,
    TADDCCri	= 584,
    TADDCCrr	= 585,
    TICCri	= 586,
    TICCrr	= 587,
    TLS_ADDXrr	= 588,
    TLS_ADDrr	= 589,
    TLS_CALL	= 590,
    TLS_LDXrr	= 591,
    TLS_LDrr	= 592,
    TRAPri	= 593,
    TRAPrr	= 594,
    TSUBCCTVri	= 595,
    TSUBCCTVrr	= 596,
    TSUBCCri	= 597,
    TSUBCCrr	= 598,
    TXCCri	= 599,
    TXCCrr	= 600,
    UDIVCCri	= 601,
    UDIVCCrr	= 602,
    UDIVXri	= 603,
    UDIVXrr	= 604,
    UDIVri	= 605,
    UDIVrr	= 606,
    UMACri	= 607,
    UMACrr	= 608,
    UMULCCri	= 609,
    UMULCCrr	= 610,
    UMULXHI	= 611,
    UMULri	= 612,
    UMULrr	= 613,
    UNIMP	= 614,
    V9FCMPD	= 615,
    V9FCMPED	= 616,
    V9FCMPEQ	= 617,
    V9FCMPES	= 618,
    V9FCMPQ	= 619,
    V9FCMPS	= 620,
    V9FMOVD_FCC	= 621,
    V9FMOVQ_FCC	= 622,
    V9FMOVS_FCC	= 623,
    V9MOVFCCri	= 624,
    V9MOVFCCrr	= 625,
    WRASRri	= 626,
    WRASRrr	= 627,
    WRPRri	= 628,
    WRPRrr	= 629,
    WRPSRri	= 630,
    WRPSRrr	= 631,
    WRTBRri	= 632,
    WRTBRrr	= 633,
    WRWIMri	= 634,
    WRWIMrr	= 635,
    XMULX	= 636,
    XMULXHI	= 637,
    XNORCCri	= 638,
    XNORCCrr	= 639,
    XNORXrr	= 640,
    XNORri	= 641,
    XNORrr	= 642,
    XORCCri	= 643,
    XORCCrr	= 644,
    XORXri	= 645,
    XORXrr	= 646,
    XORri	= 647,
    XORrr	= 648,
    INSTRUCTION_LIST_END = 649
  };

} // end SP namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace SP {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_iu_instr	= 1,
    IIC_fpu_normal_instr	= 2,
    IIC_jmp_or_call	= 3,
    IIC_fpu_abs	= 4,
    IIC_fpu_fast_instr	= 5,
    IIC_fpu_divd	= 6,
    IIC_fpu_divs	= 7,
    IIC_fpu_muld	= 8,
    IIC_fpu_muls	= 9,
    IIC_fpu_negs	= 10,
    IIC_fpu_sqrtd	= 11,
    IIC_fpu_sqrts	= 12,
    IIC_fpu_stod	= 13,
    IIC_ldd	= 14,
    IIC_iu_or_fpu_instr	= 15,
    IIC_iu_div	= 16,
    IIC_smac_umac	= 17,
    IIC_iu_smul	= 18,
    IIC_st	= 19,
    IIC_std	= 20,
    IIC_iu_umul	= 21,
    SCHED_LIST_END = 22
  };
} // end Sched namespace
} // end SP namespace
} // end llvm namespace
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { SP::ICC, 0 };
static const MCPhysReg ImplicitList2[] = { SP::O6, 0 };
static const MCPhysReg ImplicitList3[] = { SP::WIM, 0 };
static const MCPhysReg ImplicitList4[] = { SP::FCC0, 0 };
static const MCPhysReg ImplicitList5[] = { SP::O7, 0 };
static const MCPhysReg ImplicitList6[] = { SP::CPSR, 0 };
static const MCPhysReg ImplicitList7[] = { SP::FSR, 0 };
static const MCPhysReg ImplicitList8[] = { SP::Y, SP::ICC, 0 };
static const MCPhysReg ImplicitList9[] = { SP::PSR, 0 };
static const MCPhysReg ImplicitList10[] = { SP::TBR, 0 };
static const MCPhysReg ImplicitList11[] = { SP::Y, 0 };
static const MCPhysReg ImplicitList12[] = { SP::Y, SP::ASR18, 0 };
static const MCPhysReg ImplicitList13[] = { SP::CPQ, 0 };
static const MCPhysReg ImplicitList14[] = { SP::FQ, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo40[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo42[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo64[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo65[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo126[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo127[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo128[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc SparcInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #5 = ANNOTATION_LABEL
  { 6,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #6 = KILL
  { 7,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #7 = EXTRACT_SUBREG
  { 8,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #8 = INSERT_SUBREG
  { 9,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #9 = IMPLICIT_DEF
  { 10,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #10 = SUBREG_TO_REG
  { 11,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #11 = COPY_TO_REGCLASS
  { 12,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #12 = DBG_VALUE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = REG_SEQUENCE
  { 14,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #14 = COPY
  { 15,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #15 = BUNDLE
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_START
  { 17,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #17 = LIFETIME_END
  { 18,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #18 = STACKMAP
  { 19,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #19 = FENTRY_CALL
  { 20,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #20 = PATCHPOINT
  { 21,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #21 = LOAD_STACK_GUARD
  { 22,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #22 = STATEPOINT
  { 23,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #23 = LOCAL_ESCAPE
  { 24,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #24 = FAULTING_OP
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #25 = PATCHABLE_OP
  { 26,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #26 = PATCHABLE_FUNCTION_ENTER
  { 27,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #27 = PATCHABLE_RET
  { 28,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #28 = PATCHABLE_FUNCTION_EXIT
  { 29,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #29 = PATCHABLE_TAIL_CALL
  { 30,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #30 = PATCHABLE_EVENT_CALL
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_ADD
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_SUB
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_MUL
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_SDIV
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_UDIV
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_SREM
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_UREM
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #38 = G_AND
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #39 = G_OR
  { 40,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #40 = G_XOR
  { 41,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #41 = G_IMPLICIT_DEF
  { 42,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #42 = G_PHI
  { 43,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #43 = G_FRAME_INDEX
  { 44,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #44 = G_GLOBAL_VALUE
  { 45,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #45 = G_EXTRACT
  { 46,	2,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #46 = G_UNMERGE_VALUES
  { 47,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #47 = G_INSERT
  { 48,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #48 = G_MERGE_VALUES
  { 49,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #49 = G_PTRTOINT
  { 50,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #50 = G_INTTOPTR
  { 51,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #51 = G_BITCAST
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = G_LOAD
  { 53,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #53 = G_STORE
  { 54,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #54 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 55,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #55 = G_ATOMIC_CMPXCHG
  { 56,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #56 = G_ATOMICRMW_XCHG
  { 57,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #57 = G_ATOMICRMW_ADD
  { 58,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #58 = G_ATOMICRMW_SUB
  { 59,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #59 = G_ATOMICRMW_AND
  { 60,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #60 = G_ATOMICRMW_NAND
  { 61,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #61 = G_ATOMICRMW_OR
  { 62,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #62 = G_ATOMICRMW_XOR
  { 63,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #63 = G_ATOMICRMW_MAX
  { 64,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #64 = G_ATOMICRMW_MIN
  { 65,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #65 = G_ATOMICRMW_UMAX
  { 66,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #66 = G_ATOMICRMW_UMIN
  { 67,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #67 = G_BRCOND
  { 68,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #68 = G_BRINDIRECT
  { 69,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #69 = G_INTRINSIC
  { 70,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #70 = G_INTRINSIC_W_SIDE_EFFECTS
  { 71,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #71 = G_ANYEXT
  { 72,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #72 = G_TRUNC
  { 73,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #73 = G_CONSTANT
  { 74,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #74 = G_FCONSTANT
  { 75,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #75 = G_VASTART
  { 76,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #76 = G_VAARG
  { 77,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #77 = G_SEXT
  { 78,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #78 = G_ZEXT
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #79 = G_SHL
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #80 = G_LSHR
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #81 = G_ASHR
  { 82,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #82 = G_ICMP
  { 83,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #83 = G_FCMP
  { 84,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #84 = G_SELECT
  { 85,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #85 = G_UADDE
  { 86,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #86 = G_USUBE
  { 87,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #87 = G_SADDO
  { 88,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #88 = G_SSUBO
  { 89,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #89 = G_UMULO
  { 90,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #90 = G_SMULO
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #91 = G_UMULH
  { 92,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #92 = G_SMULH
  { 93,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #93 = G_FADD
  { 94,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #94 = G_FSUB
  { 95,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #95 = G_FMUL
  { 96,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #96 = G_FMA
  { 97,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #97 = G_FDIV
  { 98,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #98 = G_FREM
  { 99,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #99 = G_FPOW
  { 100,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #100 = G_FEXP
  { 101,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #101 = G_FEXP2
  { 102,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #102 = G_FLOG
  { 103,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #103 = G_FLOG2
  { 104,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #104 = G_FNEG
  { 105,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #105 = G_FPEXT
  { 106,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #106 = G_FPTRUNC
  { 107,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #107 = G_FPTOSI
  { 108,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #108 = G_FPTOUI
  { 109,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #109 = G_SITOFP
  { 110,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #110 = G_UITOFP
  { 111,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #111 = G_GEP
  { 112,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #112 = G_PTR_MASK
  { 113,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #113 = G_BR
  { 114,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #114 = G_INSERT_VECTOR_ELT
  { 115,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #115 = G_EXTRACT_VECTOR_ELT
  { 116,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #116 = G_SHUFFLE_VECTOR
  { 117,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #117 = G_BSWAP
  { 118,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #118 = ADDCCri
  { 119,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #119 = ADDCCrr
  { 120,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #120 = ADDCri
  { 121,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #121 = ADDCrr
  { 122,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #122 = ADDEri
  { 123,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #123 = ADDErr
  { 124,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #124 = ADDXC
  { 125,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #125 = ADDXCCC
  { 126,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #126 = ADDXri
  { 127,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #127 = ADDXrr
  { 128,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #128 = ADDri
  { 129,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #129 = ADDrr
  { 130,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #130 = ADJCALLSTACKDOWN
  { 131,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #131 = ADJCALLSTACKUP
  { 132,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #132 = ALIGNADDR
  { 133,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #133 = ALIGNADDRL
  { 134,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #134 = ANDCCri
  { 135,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #135 = ANDCCrr
  { 136,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #136 = ANDNCCri
  { 137,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #137 = ANDNCCrr
  { 138,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #138 = ANDNri
  { 139,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #139 = ANDNrr
  { 140,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #140 = ANDXNrr
  { 141,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #141 = ANDXri
  { 142,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #142 = ANDXrr
  { 143,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #143 = ANDri
  { 144,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #144 = ANDrr
  { 145,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #145 = ARRAY16
  { 146,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #146 = ARRAY32
  { 147,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #147 = ARRAY8
  { 148,	1,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #148 = BA
  { 149,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #149 = BCOND
  { 150,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #150 = BCONDA
  { 151,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #151 = BINDri
  { 152,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #152 = BINDrr
  { 153,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #153 = BMASK
  { 154,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #154 = BPFCC
  { 155,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #155 = BPFCCA
  { 156,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #156 = BPFCCANT
  { 157,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #157 = BPFCCNT
  { 158,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #158 = BPGEZapn
  { 159,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #159 = BPGEZapt
  { 160,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #160 = BPGEZnapn
  { 161,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #161 = BPGEZnapt
  { 162,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #162 = BPGZapn
  { 163,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #163 = BPGZapt
  { 164,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #164 = BPGZnapn
  { 165,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #165 = BPGZnapt
  { 166,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #166 = BPICC
  { 167,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #167 = BPICCA
  { 168,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #168 = BPICCANT
  { 169,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #169 = BPICCNT
  { 170,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #170 = BPLEZapn
  { 171,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #171 = BPLEZapt
  { 172,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #172 = BPLEZnapn
  { 173,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #173 = BPLEZnapt
  { 174,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #174 = BPLZapn
  { 175,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #175 = BPLZapt
  { 176,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #176 = BPLZnapn
  { 177,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #177 = BPLZnapt
  { 178,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #178 = BPNZapn
  { 179,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #179 = BPNZapt
  { 180,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #180 = BPNZnapn
  { 181,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #181 = BPNZnapt
  { 182,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #182 = BPXCC
  { 183,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #183 = BPXCCA
  { 184,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #184 = BPXCCANT
  { 185,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #185 = BPXCCNT
  { 186,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #186 = BPZapn
  { 187,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #187 = BPZapt
  { 188,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #188 = BPZnapn
  { 189,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #189 = BPZnapt
  { 190,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #190 = BSHUFFLE
  { 191,	1,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #191 = CALL
  { 192,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #192 = CALLri
  { 193,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #193 = CALLrr
  { 194,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #194 = CASAasi10
  { 195,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #195 = CASArr
  { 196,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #196 = CASXrr
  { 197,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #197 = CASrr
  { 198,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #198 = CBCOND
  { 199,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #199 = CBCONDA
  { 200,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #200 = CMASK16
  { 201,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #201 = CMASK32
  { 202,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #202 = CMASK8
  { 203,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo43, -1 ,nullptr },  // Inst #203 = CMPri
  { 204,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #204 = CMPrr
  { 205,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #205 = EDGE16
  { 206,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #206 = EDGE16L
  { 207,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #207 = EDGE16LN
  { 208,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #208 = EDGE16N
  { 209,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #209 = EDGE32
  { 210,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #210 = EDGE32L
  { 211,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #211 = EDGE32LN
  { 212,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #212 = EDGE32N
  { 213,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #213 = EDGE8
  { 214,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #214 = EDGE8L
  { 215,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #215 = EDGE8LN
  { 216,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #216 = EDGE8N
  { 217,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #217 = EH_SJLJ_LONGJMP32ri
  { 218,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #218 = EH_SJLJ_LONGJMP32rr
  { 219,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo45, -1 ,nullptr },  // Inst #219 = EH_SJLJ_SETJMP32ri
  { 220,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #220 = EH_SJLJ_SETJMP32rr
  { 221,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #221 = FABSD
  { 222,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #222 = FABSQ
  { 223,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #223 = FABSS
  { 224,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #224 = FADDD
  { 225,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #225 = FADDQ
  { 226,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #226 = FADDS
  { 227,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #227 = FALIGNADATA
  { 228,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #228 = FAND
  { 229,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #229 = FANDNOT1
  { 230,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #230 = FANDNOT1S
  { 231,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #231 = FANDNOT2
  { 232,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #232 = FANDNOT2S
  { 233,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #233 = FANDS
  { 234,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #234 = FBCOND
  { 235,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #235 = FBCONDA
  { 236,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #236 = FCHKSM16
  { 237,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo47, -1 ,nullptr },  // Inst #237 = FCMPD
  { 238,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #238 = FCMPEQ16
  { 239,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #239 = FCMPEQ32
  { 240,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #240 = FCMPGT16
  { 241,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #241 = FCMPGT32
  { 242,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #242 = FCMPLE16
  { 243,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #243 = FCMPLE32
  { 244,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #244 = FCMPNE16
  { 245,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #245 = FCMPNE32
  { 246,	2,	0,	4,	0,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo48, -1 ,nullptr },  // Inst #246 = FCMPQ
  { 247,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo49, -1 ,nullptr },  // Inst #247 = FCMPS
  { 248,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #248 = FDIVD
  { 249,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #249 = FDIVQ
  { 250,	3,	1,	4,	7,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #250 = FDIVS
  { 251,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #251 = FDMULQ
  { 252,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #252 = FDTOI
  { 253,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #253 = FDTOQ
  { 254,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #254 = FDTOS
  { 255,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #255 = FDTOX
  { 256,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #256 = FEXPAND
  { 257,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #257 = FHADDD
  { 258,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #258 = FHADDS
  { 259,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #259 = FHSUBD
  { 260,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #260 = FHSUBS
  { 261,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #261 = FITOD
  { 262,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #262 = FITOQ
  { 263,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #263 = FITOS
  { 264,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #264 = FLCMPD
  { 265,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #265 = FLCMPS
  { 266,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #266 = FLUSH
  { 267,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #267 = FLUSHW
  { 268,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #268 = FLUSHri
  { 269,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #269 = FLUSHrr
  { 270,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #270 = FMEAN16
  { 271,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #271 = FMOVD
  { 272,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #272 = FMOVD_FCC
  { 273,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #273 = FMOVD_ICC
  { 274,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #274 = FMOVD_XCC
  { 275,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #275 = FMOVQ
  { 276,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #276 = FMOVQ_FCC
  { 277,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #277 = FMOVQ_ICC
  { 278,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #278 = FMOVQ_XCC
  { 279,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #279 = FMOVRGEZD
  { 280,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #280 = FMOVRGEZQ
  { 281,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #281 = FMOVRGEZS
  { 282,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #282 = FMOVRGZD
  { 283,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #283 = FMOVRGZQ
  { 284,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #284 = FMOVRGZS
  { 285,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #285 = FMOVRLEZD
  { 286,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #286 = FMOVRLEZQ
  { 287,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #287 = FMOVRLEZS
  { 288,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #288 = FMOVRLZD
  { 289,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #289 = FMOVRLZQ
  { 290,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #290 = FMOVRLZS
  { 291,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #291 = FMOVRNZD
  { 292,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #292 = FMOVRNZQ
  { 293,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #293 = FMOVRNZS
  { 294,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #294 = FMOVRZD
  { 295,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #295 = FMOVRZQ
  { 296,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #296 = FMOVRZS
  { 297,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #297 = FMOVS
  { 298,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #298 = FMOVS_FCC
  { 299,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #299 = FMOVS_ICC
  { 300,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #300 = FMOVS_XCC
  { 301,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #301 = FMUL8SUX16
  { 302,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #302 = FMUL8ULX16
  { 303,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #303 = FMUL8X16
  { 304,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #304 = FMUL8X16AL
  { 305,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #305 = FMUL8X16AU
  { 306,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #306 = FMULD
  { 307,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #307 = FMULD8SUX16
  { 308,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #308 = FMULD8ULX16
  { 309,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #309 = FMULQ
  { 310,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #310 = FMULS
  { 311,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #311 = FNADDD
  { 312,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #312 = FNADDS
  { 313,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #313 = FNAND
  { 314,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #314 = FNANDS
  { 315,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #315 = FNEGD
  { 316,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #316 = FNEGQ
  { 317,	2,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #317 = FNEGS
  { 318,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #318 = FNHADDD
  { 319,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #319 = FNHADDS
  { 320,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #320 = FNMULD
  { 321,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #321 = FNMULS
  { 322,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #322 = FNOR
  { 323,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #323 = FNORS
  { 324,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #324 = FNOT1
  { 325,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #325 = FNOT1S
  { 326,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #326 = FNOT2
  { 327,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #327 = FNOT2S
  { 328,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #328 = FNSMULD
  { 329,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #329 = FONE
  { 330,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #330 = FONES
  { 331,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #331 = FOR
  { 332,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #332 = FORNOT1
  { 333,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #333 = FORNOT1S
  { 334,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #334 = FORNOT2
  { 335,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #335 = FORNOT2S
  { 336,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #336 = FORS
  { 337,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #337 = FPACK16
  { 338,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #338 = FPACK32
  { 339,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #339 = FPACKFIX
  { 340,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #340 = FPADD16
  { 341,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #341 = FPADD16S
  { 342,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #342 = FPADD32
  { 343,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #343 = FPADD32S
  { 344,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #344 = FPADD64
  { 345,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #345 = FPMERGE
  { 346,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #346 = FPSUB16
  { 347,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #347 = FPSUB16S
  { 348,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #348 = FPSUB32
  { 349,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #349 = FPSUB32S
  { 350,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #350 = FQTOD
  { 351,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #351 = FQTOI
  { 352,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #352 = FQTOS
  { 353,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #353 = FQTOX
  { 354,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #354 = FSLAS16
  { 355,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #355 = FSLAS32
  { 356,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #356 = FSLL16
  { 357,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #357 = FSLL32
  { 358,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #358 = FSMULD
  { 359,	2,	1,	4,	11,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #359 = FSQRTD
  { 360,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #360 = FSQRTQ
  { 361,	2,	1,	4,	12,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #361 = FSQRTS
  { 362,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #362 = FSRA16
  { 363,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #363 = FSRA32
  { 364,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #364 = FSRC1
  { 365,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #365 = FSRC1S
  { 366,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #366 = FSRC2
  { 367,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #367 = FSRC2S
  { 368,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #368 = FSRL16
  { 369,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #369 = FSRL32
  { 370,	2,	1,	4,	13,	0, 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #370 = FSTOD
  { 371,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #371 = FSTOI
  { 372,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #372 = FSTOQ
  { 373,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #373 = FSTOX
  { 374,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #374 = FSUBD
  { 375,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #375 = FSUBQ
  { 376,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #376 = FSUBS
  { 377,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #377 = FXNOR
  { 378,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #378 = FXNORS
  { 379,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #379 = FXOR
  { 380,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #380 = FXORS
  { 381,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #381 = FXTOD
  { 382,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #382 = FXTOQ
  { 383,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #383 = FXTOS
  { 384,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #384 = FZERO
  { 385,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #385 = FZEROS
  { 386,	1,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList5, OperandInfo2, -1 ,nullptr },  // Inst #386 = GETPCX
  { 387,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #387 = JMPLri
  { 388,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #388 = JMPLrr
  { 389,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #389 = LDArr
  { 390,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo34, -1 ,nullptr },  // Inst #390 = LDCSRri
  { 391,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo35, -1 ,nullptr },  // Inst #391 = LDCSRrr
  { 392,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #392 = LDCri
  { 393,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #393 = LDCrr
  { 394,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #394 = LDDArr
  { 395,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #395 = LDDCri
  { 396,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #396 = LDDCrr
  { 397,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #397 = LDDFArr
  { 398,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #398 = LDDFri
  { 399,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #399 = LDDFrr
  { 400,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #400 = LDDri
  { 401,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #401 = LDDrr
  { 402,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #402 = LDFArr
  { 403,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo34, -1 ,nullptr },  // Inst #403 = LDFSRri
  { 404,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo35, -1 ,nullptr },  // Inst #404 = LDFSRrr
  { 405,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #405 = LDFri
  { 406,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #406 = LDFrr
  { 407,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #407 = LDQFArr
  { 408,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #408 = LDQFri
  { 409,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #409 = LDQFrr
  { 410,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #410 = LDSBArr
  { 411,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #411 = LDSBri
  { 412,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #412 = LDSBrr
  { 413,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #413 = LDSHArr
  { 414,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #414 = LDSHri
  { 415,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #415 = LDSHrr
  { 416,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #416 = LDSTUBArr
  { 417,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #417 = LDSTUBri
  { 418,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #418 = LDSTUBrr
  { 419,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #419 = LDSWri
  { 420,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #420 = LDSWrr
  { 421,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #421 = LDUBArr
  { 422,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #422 = LDUBri
  { 423,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #423 = LDUBrr
  { 424,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #424 = LDUHArr
  { 425,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #425 = LDUHri
  { 426,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #426 = LDUHrr
  { 427,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo34, -1 ,nullptr },  // Inst #427 = LDXFSRri
  { 428,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo35, -1 ,nullptr },  // Inst #428 = LDXFSRrr
  { 429,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #429 = LDXri
  { 430,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #430 = LDXrr
  { 431,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #431 = LDri
  { 432,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #432 = LDrr
  { 433,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #433 = LEAX_ADDri
  { 434,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #434 = LEA_ADDri
  { 435,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #435 = LZCNT
  { 436,	1,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #436 = MEMBARi
  { 437,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #437 = MOVDTOX
  { 438,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #438 = MOVFCCri
  { 439,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #439 = MOVFCCrr
  { 440,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #440 = MOVICCri
  { 441,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #441 = MOVICCrr
  { 442,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #442 = MOVRGEZri
  { 443,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #443 = MOVRGEZrr
  { 444,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #444 = MOVRGZri
  { 445,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #445 = MOVRGZrr
  { 446,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #446 = MOVRLEZri
  { 447,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #447 = MOVRLEZrr
  { 448,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #448 = MOVRLZri
  { 449,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #449 = MOVRLZrr
  { 450,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #450 = MOVRNZri
  { 451,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #451 = MOVRNZrr
  { 452,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #452 = MOVRRZri
  { 453,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #453 = MOVRRZrr
  { 454,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #454 = MOVSTOSW
  { 455,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #455 = MOVSTOUW
  { 456,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #456 = MOVWTOS
  { 457,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #457 = MOVXCCri
  { 458,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #458 = MOVXCCrr
  { 459,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #459 = MOVXTOD
  { 460,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo30, -1 ,nullptr },  // Inst #460 = MULSCCri
  { 461,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo31, -1 ,nullptr },  // Inst #461 = MULSCCrr
  { 462,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #462 = MULXri
  { 463,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #463 = MULXrr
  { 464,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #464 = NOP
  { 465,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #465 = ORCCri
  { 466,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #466 = ORCCrr
  { 467,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #467 = ORNCCri
  { 468,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #468 = ORNCCrr
  { 469,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #469 = ORNri
  { 470,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #470 = ORNrr
  { 471,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #471 = ORXNrr
  { 472,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #472 = ORXri
  { 473,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #473 = ORXrr
  { 474,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #474 = ORri
  { 475,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #475 = ORrr
  { 476,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #476 = PDIST
  { 477,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #477 = PDISTN
  { 478,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #478 = POPCrr
  { 479,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #479 = RDASR
  { 480,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #480 = RDPR
  { 481,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #481 = RDPSR
  { 482,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #482 = RDTBR
  { 483,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #483 = RDWIM
  { 484,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #484 = RESTOREri
  { 485,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #485 = RESTORErr
  { 486,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #486 = RET
  { 487,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #487 = RETL
  { 488,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #488 = RETTri
  { 489,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #489 = RETTrr
  { 490,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #490 = SAVEri
  { 491,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #491 = SAVErr
  { 492,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo30, -1 ,nullptr },  // Inst #492 = SDIVCCri
  { 493,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo31, -1 ,nullptr },  // Inst #493 = SDIVCCrr
  { 494,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #494 = SDIVXri
  { 495,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #495 = SDIVXrr
  { 496,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo30, -1 ,nullptr },  // Inst #496 = SDIVri
  { 497,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo31, -1 ,nullptr },  // Inst #497 = SDIVrr
  { 498,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #498 = SELECT_CC_DFP_FCC
  { 499,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #499 = SELECT_CC_DFP_ICC
  { 500,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #500 = SELECT_CC_FP_FCC
  { 501,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #501 = SELECT_CC_FP_ICC
  { 502,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #502 = SELECT_CC_Int_FCC
  { 503,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #503 = SELECT_CC_Int_ICC
  { 504,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #504 = SELECT_CC_QFP_FCC
  { 505,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #505 = SELECT_CC_QFP_ICC
  { 506,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #506 = SET
  { 507,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #507 = SETHIXi
  { 508,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #508 = SETHIi
  { 509,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #509 = SHUTDOWN
  { 510,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #510 = SIAM
  { 511,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #511 = SLLXri
  { 512,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #512 = SLLXrr
  { 513,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #513 = SLLri
  { 514,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #514 = SLLrr
  { 515,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo102, -1 ,nullptr },  // Inst #515 = SMACri
  { 516,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo103, -1 ,nullptr },  // Inst #516 = SMACrr
  { 517,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo30, -1 ,nullptr },  // Inst #517 = SMULCCri
  { 518,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo31, -1 ,nullptr },  // Inst #518 = SMULCCrr
  { 519,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo30, -1 ,nullptr },  // Inst #519 = SMULri
  { 520,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo31, -1 ,nullptr },  // Inst #520 = SMULrr
  { 521,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #521 = SRAXri
  { 522,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #522 = SRAXrr
  { 523,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #523 = SRAri
  { 524,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #524 = SRArr
  { 525,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #525 = SRLXri
  { 526,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #526 = SRLXrr
  { 527,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #527 = SRLri
  { 528,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #528 = SRLrr
  { 529,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #529 = STArr
  { 530,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #530 = STBAR
  { 531,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #531 = STBArr
  { 532,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #532 = STBri
  { 533,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #533 = STBrr
  { 534,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo34, -1 ,nullptr },  // Inst #534 = STCSRri
  { 535,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo35, -1 ,nullptr },  // Inst #535 = STCSRrr
  { 536,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #536 = STCri
  { 537,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #537 = STCrr
  { 538,	4,	0,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #538 = STDArr
  { 539,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo34, -1 ,nullptr },  // Inst #539 = STDCQri
  { 540,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo35, -1 ,nullptr },  // Inst #540 = STDCQrr
  { 541,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #541 = STDCri
  { 542,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #542 = STDCrr
  { 543,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #543 = STDFArr
  { 544,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo34, -1 ,nullptr },  // Inst #544 = STDFQri
  { 545,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo35, -1 ,nullptr },  // Inst #545 = STDFQrr
  { 546,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #546 = STDFri
  { 547,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #547 = STDFrr
  { 548,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #548 = STDri
  { 549,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #549 = STDrr
  { 550,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #550 = STFArr
  { 551,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo34, -1 ,nullptr },  // Inst #551 = STFSRri
  { 552,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo35, -1 ,nullptr },  // Inst #552 = STFSRrr
  { 553,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #553 = STFri
  { 554,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #554 = STFrr
  { 555,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #555 = STHArr
  { 556,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #556 = STHri
  { 557,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #557 = STHrr
  { 558,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #558 = STQFArr
  { 559,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #559 = STQFri
  { 560,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #560 = STQFrr
  { 561,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo34, -1 ,nullptr },  // Inst #561 = STXFSRri
  { 562,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo35, -1 ,nullptr },  // Inst #562 = STXFSRrr
  { 563,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #563 = STXri
  { 564,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #564 = STXrr
  { 565,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #565 = STri
  { 566,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #566 = STrr
  { 567,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #567 = SUBCCri
  { 568,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #568 = SUBCCrr
  { 569,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #569 = SUBCri
  { 570,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #570 = SUBCrr
  { 571,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #571 = SUBEri
  { 572,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #572 = SUBErr
  { 573,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #573 = SUBXri
  { 574,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #574 = SUBXrr
  { 575,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #575 = SUBri
  { 576,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #576 = SUBrr
  { 577,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #577 = SWAPArr
  { 578,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #578 = SWAPri
  { 579,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #579 = SWAPrr
  { 580,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #580 = TA3
  { 581,	0,	0,	4,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #581 = TA5
  { 582,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #582 = TADDCCTVri
  { 583,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #583 = TADDCCTVrr
  { 584,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #584 = TADDCCri
  { 585,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #585 = TADDCCrr
  { 586,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #586 = TICCri
  { 587,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #587 = TICCrr
  { 588,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #588 = TLS_ADDXrr
  { 589,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #589 = TLS_ADDrr
  { 590,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #590 = TLS_CALL
  { 591,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #591 = TLS_LDXrr
  { 592,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #592 = TLS_LDrr
  { 593,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #593 = TRAPri
  { 594,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #594 = TRAPrr
  { 595,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #595 = TSUBCCTVri
  { 596,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #596 = TSUBCCTVrr
  { 597,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #597 = TSUBCCri
  { 598,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #598 = TSUBCCrr
  { 599,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #599 = TXCCri
  { 600,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #600 = TXCCrr
  { 601,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo30, -1 ,nullptr },  // Inst #601 = UDIVCCri
  { 602,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo31, -1 ,nullptr },  // Inst #602 = UDIVCCrr
  { 603,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #603 = UDIVXri
  { 604,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #604 = UDIVXrr
  { 605,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo30, -1 ,nullptr },  // Inst #605 = UDIVri
  { 606,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo31, -1 ,nullptr },  // Inst #606 = UDIVrr
  { 607,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo102, -1 ,nullptr },  // Inst #607 = UMACri
  { 608,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo103, -1 ,nullptr },  // Inst #608 = UMACrr
  { 609,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo30, -1 ,nullptr },  // Inst #609 = UMULCCri
  { 610,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo31, -1 ,nullptr },  // Inst #610 = UMULCCrr
  { 611,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #611 = UMULXHI
  { 612,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo30, -1 ,nullptr },  // Inst #612 = UMULri
  { 613,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo31, -1 ,nullptr },  // Inst #613 = UMULrr
  { 614,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #614 = UNIMP
  { 615,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #615 = V9FCMPD
  { 616,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #616 = V9FCMPED
  { 617,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #617 = V9FCMPEQ
  { 618,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #618 = V9FCMPES
  { 619,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #619 = V9FCMPQ
  { 620,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #620 = V9FCMPS
  { 621,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #621 = V9FMOVD_FCC
  { 622,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #622 = V9FMOVQ_FCC
  { 623,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #623 = V9FMOVS_FCC
  { 624,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #624 = V9MOVFCCri
  { 625,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #625 = V9MOVFCCrr
  { 626,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #626 = WRASRri
  { 627,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #627 = WRASRrr
  { 628,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #628 = WRPRri
  { 629,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #629 = WRPRrr
  { 630,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo43, -1 ,nullptr },  // Inst #630 = WRPSRri
  { 631,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo44, -1 ,nullptr },  // Inst #631 = WRPSRrr
  { 632,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo43, -1 ,nullptr },  // Inst #632 = WRTBRri
  { 633,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo44, -1 ,nullptr },  // Inst #633 = WRTBRrr
  { 634,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo43, -1 ,nullptr },  // Inst #634 = WRWIMri
  { 635,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo44, -1 ,nullptr },  // Inst #635 = WRWIMrr
  { 636,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #636 = XMULX
  { 637,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #637 = XMULXHI
  { 638,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #638 = XNORCCri
  { 639,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #639 = XNORCCrr
  { 640,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #640 = XNORXrr
  { 641,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #641 = XNORri
  { 642,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #642 = XNORrr
  { 643,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #643 = XORCCri
  { 644,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #644 = XORCCrr
  { 645,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #645 = XORXri
  { 646,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #646 = XORXrr
  { 647,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #647 = XORri
  { 648,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #648 = XORrr
};

extern const char SparcInstrNameData[] = {
  /* 0 */ 'C', 'A', 'S', 'A', 'a', 's', 'i', '1', '0', 0,
  /* 10 */ 'F', 'S', 'R', 'C', '1', 0,
  /* 16 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 0,
  /* 25 */ 'F', 'N', 'O', 'T', '1', 0,
  /* 31 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 0,
  /* 39 */ 'F', 'S', 'R', 'A', '3', '2', 0,
  /* 46 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 0,
  /* 54 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 0,
  /* 62 */ 'E', 'D', 'G', 'E', '3', '2', 0,
  /* 69 */ 'F', 'C', 'M', 'P', 'L', 'E', '3', '2', 0,
  /* 78 */ 'F', 'C', 'M', 'P', 'N', 'E', '3', '2', 0,
  /* 87 */ 'F', 'P', 'A', 'C', 'K', '3', '2', 0,
  /* 95 */ 'C', 'M', 'A', 'S', 'K', '3', '2', 0,
  /* 103 */ 'F', 'S', 'L', 'L', '3', '2', 0,
  /* 110 */ 'F', 'S', 'R', 'L', '3', '2', 0,
  /* 117 */ 'F', 'C', 'M', 'P', 'E', 'Q', '3', '2', 0,
  /* 126 */ 'F', 'S', 'L', 'A', 'S', '3', '2', 0,
  /* 134 */ 'F', 'C', 'M', 'P', 'G', 'T', '3', '2', 0,
  /* 143 */ 'A', 'R', 'R', 'A', 'Y', '3', '2', 0,
  /* 151 */ 'F', 'S', 'R', 'C', '2', 0,
  /* 157 */ 'G', '_', 'F', 'L', 'O', 'G', '2', 0,
  /* 165 */ 'G', '_', 'F', 'E', 'X', 'P', '2', 0,
  /* 173 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 0,
  /* 182 */ 'F', 'N', 'O', 'T', '2', 0,
  /* 188 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 0,
  /* 196 */ 'T', 'A', '3', 0,
  /* 200 */ 'F', 'P', 'A', 'D', 'D', '6', '4', 0,
  /* 208 */ 'T', 'A', '5', 0,
  /* 212 */ 'F', 'S', 'R', 'A', '1', '6', 0,
  /* 219 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 0,
  /* 227 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 0,
  /* 235 */ 'E', 'D', 'G', 'E', '1', '6', 0,
  /* 242 */ 'F', 'C', 'M', 'P', 'L', 'E', '1', '6', 0,
  /* 251 */ 'F', 'C', 'M', 'P', 'N', 'E', '1', '6', 0,
  /* 260 */ 'F', 'P', 'A', 'C', 'K', '1', '6', 0,
  /* 268 */ 'C', 'M', 'A', 'S', 'K', '1', '6', 0,
  /* 276 */ 'F', 'S', 'L', 'L', '1', '6', 0,
  /* 283 */ 'F', 'S', 'R', 'L', '1', '6', 0,
  /* 290 */ 'F', 'C', 'H', 'K', 'S', 'M', '1', '6', 0,
  /* 299 */ 'F', 'M', 'E', 'A', 'N', '1', '6', 0,
  /* 307 */ 'F', 'C', 'M', 'P', 'E', 'Q', '1', '6', 0,
  /* 316 */ 'F', 'S', 'L', 'A', 'S', '1', '6', 0,
  /* 324 */ 'F', 'C', 'M', 'P', 'G', 'T', '1', '6', 0,
  /* 333 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 0,
  /* 342 */ 'F', 'M', 'U', 'L', 'D', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 354 */ 'F', 'M', 'U', 'L', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 365 */ 'F', 'M', 'U', 'L', 'D', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 377 */ 'F', 'M', 'U', 'L', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 388 */ 'A', 'R', 'R', 'A', 'Y', '1', '6', 0,
  /* 396 */ 'E', 'D', 'G', 'E', '8', 0,
  /* 402 */ 'C', 'M', 'A', 'S', 'K', '8', 0,
  /* 409 */ 'A', 'R', 'R', 'A', 'Y', '8', 0,
  /* 416 */ 'B', 'A', 0,
  /* 419 */ 'B', 'P', 'F', 'C', 'C', 'A', 0,
  /* 426 */ 'B', 'P', 'I', 'C', 'C', 'A', 0,
  /* 433 */ 'B', 'P', 'X', 'C', 'C', 'A', 0,
  /* 440 */ 'C', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 448 */ 'F', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 456 */ 'G', '_', 'F', 'M', 'A', 0,
  /* 462 */ 'F', 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'A', 'T', 'A', 0,
  /* 474 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 481 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 487 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'S', 'U', 'B', 0,
  /* 503 */ 'A', 'D', 'D', 'X', 'C', 'C', 'C', 0,
  /* 511 */ 'B', 'P', 'F', 'C', 'C', 0,
  /* 517 */ 'V', '9', 'F', 'M', 'O', 'V', 'D', '_', 'F', 'C', 'C', 0,
  /* 529 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 547 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 565 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 582 */ 'V', '9', 'F', 'M', 'O', 'V', 'Q', '_', 'F', 'C', 'C', 0,
  /* 594 */ 'V', '9', 'F', 'M', 'O', 'V', 'S', '_', 'F', 'C', 'C', 0,
  /* 606 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'F', 'C', 'C', 0,
  /* 624 */ 'B', 'P', 'I', 'C', 'C', 0,
  /* 630 */ 'F', 'M', 'O', 'V', 'D', '_', 'I', 'C', 'C', 0,
  /* 640 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 658 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 676 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 693 */ 'F', 'M', 'O', 'V', 'Q', '_', 'I', 'C', 'C', 0,
  /* 703 */ 'F', 'M', 'O', 'V', 'S', '_', 'I', 'C', 'C', 0,
  /* 713 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'I', 'C', 'C', 0,
  /* 731 */ 'B', 'P', 'X', 'C', 'C', 0,
  /* 737 */ 'F', 'M', 'O', 'V', 'D', '_', 'X', 'C', 'C', 0,
  /* 747 */ 'F', 'M', 'O', 'V', 'Q', '_', 'X', 'C', 'C', 0,
  /* 757 */ 'F', 'M', 'O', 'V', 'S', '_', 'X', 'C', 'C', 0,
  /* 767 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 779 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 789 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 797 */ 'A', 'D', 'D', 'X', 'C', 0,
  /* 803 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 810 */ 'F', 'S', 'U', 'B', 'D', 0,
  /* 816 */ 'F', 'H', 'S', 'U', 'B', 'D', 0,
  /* 823 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 830 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 836 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'D', 'D', 0,
  /* 852 */ 'F', 'A', 'D', 'D', 'D', 0,
  /* 858 */ 'F', 'H', 'A', 'D', 'D', 'D', 0,
  /* 865 */ 'F', 'N', 'H', 'A', 'D', 'D', 'D', 0,
  /* 873 */ 'F', 'N', 'A', 'D', 'D', 'D', 0,
  /* 880 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'D', 0,
  /* 889 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 895 */ 'F', 'M', 'U', 'L', 'D', 0,
  /* 901 */ 'F', 'N', 'M', 'U', 'L', 'D', 0,
  /* 908 */ 'F', 'S', 'M', 'U', 'L', 'D', 0,
  /* 915 */ 'F', 'N', 'S', 'M', 'U', 'L', 'D', 0,
  /* 923 */ 'F', 'A', 'N', 'D', 0,
  /* 928 */ 'F', 'N', 'A', 'N', 'D', 0,
  /* 934 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'N', 'A', 'N', 'D', 0,
  /* 951 */ 'F', 'E', 'X', 'P', 'A', 'N', 'D', 0,
  /* 959 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 965 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'N', 'D', 0,
  /* 981 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 994 */ 'C', 'B', 'C', 'O', 'N', 'D', 0,
  /* 1001 */ 'F', 'B', 'C', 'O', 'N', 'D', 0,
  /* 1008 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 1017 */ 'F', 'I', 'T', 'O', 'D', 0,
  /* 1023 */ 'F', 'Q', 'T', 'O', 'D', 0,
  /* 1029 */ 'F', 'S', 'T', 'O', 'D', 0,
  /* 1035 */ 'F', 'X', 'T', 'O', 'D', 0,
  /* 1041 */ 'M', 'O', 'V', 'X', 'T', 'O', 'D', 0,
  /* 1049 */ 'V', '9', 'F', 'C', 'M', 'P', 'D', 0,
  /* 1057 */ 'F', 'L', 'C', 'M', 'P', 'D', 0,
  /* 1064 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 1081 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 1087 */ 'F', 'S', 'Q', 'R', 'T', 'D', 0,
  /* 1094 */ 'F', 'D', 'I', 'V', 'D', 0,
  /* 1100 */ 'F', 'M', 'O', 'V', 'D', 0,
  /* 1106 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'D', 0,
  /* 1116 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'D', 0,
  /* 1126 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'D', 0,
  /* 1135 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'D', 0,
  /* 1144 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'D', 0,
  /* 1153 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'D', 0,
  /* 1161 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 1169 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 1182 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 1190 */ 'F', 'P', 'M', 'E', 'R', 'G', 'E', 0,
  /* 1198 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1205 */ 'B', 'S', 'H', 'U', 'F', 'F', 'L', 'E', 0,
  /* 1214 */ 'F', 'O', 'N', 'E', 0,
  /* 1219 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 1232 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 1240 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1250 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1265 */ 'G', '_', 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 1280 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 1287 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1302 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1316 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 1330 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', 0,
  /* 1347 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', 0,
  /* 1364 */ 'G', '_', 'F', 'L', 'O', 'G', 0,
  /* 1371 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 1379 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 1387 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 1395 */ 'F', 'L', 'U', 'S', 'H', 0,
  /* 1401 */ 'G', '_', 'P', 'H', 'I', 0,
  /* 1407 */ 'U', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1415 */ 'X', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1423 */ 'F', 'D', 'T', 'O', 'I', 0,
  /* 1429 */ 'F', 'Q', 'T', 'O', 'I', 0,
  /* 1435 */ 'F', 'S', 'T', 'O', 'I', 0,
  /* 1441 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 1450 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 1459 */ 'B', 'M', 'A', 'S', 'K', 0,
  /* 1465 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 1476 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 0,
  /* 1484 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 0,
  /* 1492 */ 'E', 'D', 'G', 'E', '8', 'L', 0,
  /* 1499 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'L', 0,
  /* 1510 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1519 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1528 */ 'A', 'N', 'N', 'O', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1545 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 1551 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 1571 */ 'T', 'L', 'S', '_', 'C', 'A', 'L', 'L', 0,
  /* 1580 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 1601 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 1613 */ 'K', 'I', 'L', 'L', 0,
  /* 1618 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 'L', 0,
  /* 1629 */ 'R', 'E', 'T', 'L', 0,
  /* 1634 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 1641 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 1647 */ 'S', 'I', 'A', 'M', 0,
  /* 1652 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 1659 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 1666 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 1673 */ 'R', 'D', 'W', 'I', 'M', 0,
  /* 1679 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 1689 */ 'E', 'D', 'G', 'E', '3', '2', 'N', 0,
  /* 1697 */ 'E', 'D', 'G', 'E', '1', '6', 'N', 0,
  /* 1705 */ 'E', 'D', 'G', 'E', '8', 'N', 0,
  /* 1712 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 1729 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'I', 'N', 0,
  /* 1745 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 'N', 0,
  /* 1754 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 'N', 0,
  /* 1763 */ 'E', 'D', 'G', 'E', '8', 'L', 'N', 0,
  /* 1771 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 1787 */ 'P', 'D', 'I', 'S', 'T', 'N', 0,
  /* 1794 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 1811 */ 'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', 0,
  /* 1820 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 1828 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 1836 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 1844 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 1852 */ 'F', 'Z', 'E', 'R', 'O', 0,
  /* 1858 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 1867 */ 'G', '_', 'B', 'S', 'W', 'A', 'P', 0,
  /* 1875 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 1881 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1890 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1899 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 1906 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 1913 */ 'U', 'N', 'I', 'M', 'P', 0,
  /* 1919 */ 'N', 'O', 'P', 0,
  /* 1923 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 1936 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 1948 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 1963 */ 'G', '_', 'F', 'E', 'X', 'P', 0,
  /* 1970 */ 'F', 'S', 'U', 'B', 'Q', 0,
  /* 1976 */ 'F', 'A', 'D', 'D', 'Q', 0,
  /* 1982 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 1991 */ 'F', 'N', 'E', 'G', 'Q', 0,
  /* 1997 */ 'F', 'D', 'M', 'U', 'L', 'Q', 0,
  /* 2004 */ 'F', 'M', 'U', 'L', 'Q', 0,
  /* 2010 */ 'F', 'D', 'T', 'O', 'Q', 0,
  /* 2016 */ 'F', 'I', 'T', 'O', 'Q', 0,
  /* 2022 */ 'F', 'S', 'T', 'O', 'Q', 0,
  /* 2028 */ 'F', 'X', 'T', 'O', 'Q', 0,
  /* 2034 */ 'V', '9', 'F', 'C', 'M', 'P', 'Q', 0,
  /* 2042 */ 'F', 'A', 'B', 'S', 'Q', 0,
  /* 2048 */ 'F', 'S', 'Q', 'R', 'T', 'Q', 0,
  /* 2055 */ 'F', 'D', 'I', 'V', 'Q', 0,
  /* 2061 */ 'F', 'M', 'O', 'V', 'Q', 0,
  /* 2067 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'Q', 0,
  /* 2077 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'Q', 0,
  /* 2087 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'Q', 0,
  /* 2096 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'Q', 0,
  /* 2105 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'Q', 0,
  /* 2114 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'Q', 0,
  /* 2122 */ 'S', 'T', 'B', 'A', 'R', 0,
  /* 2128 */ 'R', 'D', 'T', 'B', 'R', 0,
  /* 2134 */ 'G', '_', 'B', 'R', 0,
  /* 2139 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 0,
  /* 2149 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 2174 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 2181 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 2188 */ 'F', 'O', 'R', 0,
  /* 2192 */ 'F', 'N', 'O', 'R', 0,
  /* 2197 */ 'F', 'X', 'N', 'O', 'R', 0,
  /* 2203 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 2220 */ 'F', 'X', 'O', 'R', 0,
  /* 2225 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 2231 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'O', 'R', 0,
  /* 2247 */ 'G', '_', 'O', 'R', 0,
  /* 2252 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'O', 'R', 0,
  /* 2267 */ 'R', 'D', 'P', 'R', 0,
  /* 2272 */ 'R', 'D', 'A', 'S', 'R', 0,
  /* 2278 */ 'R', 'D', 'P', 'S', 'R', 0,
  /* 2284 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 2295 */ 'F', 'S', 'R', 'C', '1', 'S', 0,
  /* 2302 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 'S', 0,
  /* 2312 */ 'F', 'N', 'O', 'T', '1', 'S', 0,
  /* 2319 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 'S', 0,
  /* 2328 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 'S', 0,
  /* 2337 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 'S', 0,
  /* 2346 */ 'F', 'S', 'R', 'C', '2', 'S', 0,
  /* 2353 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 'S', 0,
  /* 2363 */ 'F', 'N', 'O', 'T', '2', 'S', 0,
  /* 2370 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 'S', 0,
  /* 2379 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 'S', 0,
  /* 2388 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 'S', 0,
  /* 2397 */ 'F', 'S', 'U', 'B', 'S', 0,
  /* 2403 */ 'F', 'H', 'S', 'U', 'B', 'S', 0,
  /* 2410 */ 'F', 'A', 'D', 'D', 'S', 0,
  /* 2416 */ 'F', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2423 */ 'F', 'N', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2431 */ 'F', 'N', 'A', 'D', 'D', 'S', 0,
  /* 2438 */ 'F', 'A', 'N', 'D', 'S', 0,
  /* 2444 */ 'F', 'N', 'A', 'N', 'D', 'S', 0,
  /* 2451 */ 'F', 'O', 'N', 'E', 'S', 0,
  /* 2457 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'S', 0,
  /* 2466 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 2483 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 2498 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 2504 */ 'F', 'M', 'U', 'L', 'S', 0,
  /* 2510 */ 'F', 'N', 'M', 'U', 'L', 'S', 0,
  /* 2517 */ 'F', 'Z', 'E', 'R', 'O', 'S', 0,
  /* 2524 */ 'F', 'D', 'T', 'O', 'S', 0,
  /* 2530 */ 'F', 'I', 'T', 'O', 'S', 0,
  /* 2536 */ 'F', 'Q', 'T', 'O', 'S', 0,
  /* 2542 */ 'M', 'O', 'V', 'W', 'T', 'O', 'S', 0,
  /* 2550 */ 'F', 'X', 'T', 'O', 'S', 0,
  /* 2556 */ 'V', '9', 'F', 'C', 'M', 'P', 'S', 0,
  /* 2564 */ 'F', 'L', 'C', 'M', 'P', 'S', 0,
  /* 2571 */ 'F', 'O', 'R', 'S', 0,
  /* 2576 */ 'F', 'N', 'O', 'R', 'S', 0,
  /* 2582 */ 'F', 'X', 'N', 'O', 'R', 'S', 0,
  /* 2589 */ 'F', 'X', 'O', 'R', 'S', 0,
  /* 2595 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 2612 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 2618 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'W', 'I', 'T', 'H', '_', 'S', 'U', 'C', 'C', 'E', 'S', 'S', 0,
  /* 2648 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 2675 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 2682 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 2688 */ 'F', 'M', 'O', 'V', 'S', 0,
  /* 2694 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'S', 0,
  /* 2704 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'S', 0,
  /* 2714 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'S', 0,
  /* 2723 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'S', 0,
  /* 2732 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'S', 0,
  /* 2741 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'S', 0,
  /* 2749 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 2759 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 2768 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 2781 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 2795 */ 'S', 'E', 'T', 0,
  /* 2799 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 2823 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 2844 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 2864 */ 'B', 'P', 'F', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2873 */ 'B', 'P', 'I', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2882 */ 'B', 'P', 'X', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2891 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2903 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2914 */ 'B', 'P', 'F', 'C', 'C', 'N', 'T', 0,
  /* 2922 */ 'B', 'P', 'I', 'C', 'C', 'N', 'T', 0,
  /* 2930 */ 'B', 'P', 'X', 'C', 'C', 'N', 'T', 0,
  /* 2938 */ 'L', 'Z', 'C', 'N', 'T', 0,
  /* 2944 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2955 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2966 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 2977 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2987 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 3002 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 3011 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 3021 */ 'P', 'D', 'I', 'S', 'T', 0,
  /* 3027 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 3035 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 3042 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 3051 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 3058 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'U', 0,
  /* 3069 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 3076 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 3083 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 3090 */ 'F', 'L', 'U', 'S', 'H', 'W', 0,
  /* 3097 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 3104 */ 'M', 'O', 'V', 'S', 'T', 'O', 'S', 'W', 0,
  /* 3113 */ 'M', 'O', 'V', 'S', 'T', 'O', 'U', 'W', 0,
  /* 3122 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 3139 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'A', 'X', 0,
  /* 3155 */ 'G', 'E', 'T', 'P', 'C', 'X', 0,
  /* 3162 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 3176 */ 'F', 'P', 'A', 'C', 'K', 'F', 'I', 'X', 0,
  /* 3185 */ 'X', 'M', 'U', 'L', 'X', 0,
  /* 3191 */ 'F', 'D', 'T', 'O', 'X', 0,
  /* 3197 */ 'M', 'O', 'V', 'D', 'T', 'O', 'X', 0,
  /* 3205 */ 'F', 'Q', 'T', 'O', 'X', 0,
  /* 3211 */ 'F', 'S', 'T', 'O', 'X', 0,
  /* 3217 */ 'C', 'O', 'P', 'Y', 0,
  /* 3222 */ 'S', 'E', 'T', 'H', 'I', 'i', 0,
  /* 3229 */ 'M', 'E', 'M', 'B', 'A', 'R', 'i', 0,
  /* 3237 */ 'S', 'E', 'T', 'H', 'I', 'X', 'i', 0,
  /* 3245 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 3265 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 3284 */ 'S', 'R', 'A', 'r', 'i', 0,
  /* 3290 */ 'L', 'D', 'S', 'B', 'r', 'i', 0,
  /* 3297 */ 'S', 'T', 'B', 'r', 'i', 0,
  /* 3303 */ 'L', 'D', 'U', 'B', 'r', 'i', 0,
  /* 3310 */ 'S', 'U', 'B', 'r', 'i', 0,
  /* 3316 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'i', 0,
  /* 3325 */ 'S', 'M', 'A', 'C', 'r', 'i', 0,
  /* 3332 */ 'U', 'M', 'A', 'C', 'r', 'i', 0,
  /* 3339 */ 'S', 'U', 'B', 'C', 'r', 'i', 0,
  /* 3346 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'i', 0,
  /* 3355 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'i', 0,
  /* 3364 */ 'A', 'N', 'D', 'C', 'C', 'r', 'i', 0,
  /* 3372 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'i', 0,
  /* 3383 */ 'T', 'I', 'C', 'C', 'r', 'i', 0,
  /* 3390 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'i', 0,
  /* 3399 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 3408 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 3417 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'i', 0,
  /* 3426 */ 'O', 'R', 'N', 'C', 'C', 'r', 'i', 0,
  /* 3434 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 3443 */ 'X', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 3451 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'i', 0,
  /* 3460 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 3469 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 3478 */ 'T', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3485 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3494 */ 'A', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3501 */ 'L', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3508 */ 'L', 'D', 'C', 'r', 'i', 0,
  /* 3514 */ 'S', 'T', 'D', 'C', 'r', 'i', 0,
  /* 3521 */ 'S', 'T', 'C', 'r', 'i', 0,
  /* 3527 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3537 */ 'L', 'E', 'A', 'X', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3548 */ 'L', 'D', 'D', 'r', 'i', 0,
  /* 3554 */ 'L', 'D', 'r', 'i', 0,
  /* 3559 */ 'A', 'N', 'D', 'r', 'i', 0,
  /* 3565 */ 'B', 'I', 'N', 'D', 'r', 'i', 0,
  /* 3572 */ 'S', 'T', 'D', 'r', 'i', 0,
  /* 3578 */ 'S', 'U', 'B', 'E', 'r', 'i', 0,
  /* 3585 */ 'A', 'D', 'D', 'E', 'r', 'i', 0,
  /* 3592 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'i', 0,
  /* 3602 */ 'S', 'A', 'V', 'E', 'r', 'i', 0,
  /* 3609 */ 'L', 'D', 'D', 'F', 'r', 'i', 0,
  /* 3616 */ 'L', 'D', 'F', 'r', 'i', 0,
  /* 3622 */ 'S', 'T', 'D', 'F', 'r', 'i', 0,
  /* 3629 */ 'L', 'D', 'Q', 'F', 'r', 'i', 0,
  /* 3636 */ 'S', 'T', 'Q', 'F', 'r', 'i', 0,
  /* 3643 */ 'S', 'T', 'F', 'r', 'i', 0,
  /* 3649 */ 'L', 'D', 'S', 'H', 'r', 'i', 0,
  /* 3656 */ 'F', 'L', 'U', 'S', 'H', 'r', 'i', 0,
  /* 3664 */ 'S', 'T', 'H', 'r', 'i', 0,
  /* 3670 */ 'L', 'D', 'U', 'H', 'r', 'i', 0,
  /* 3677 */ 'C', 'A', 'L', 'L', 'r', 'i', 0,
  /* 3684 */ 'S', 'L', 'L', 'r', 'i', 0,
  /* 3690 */ 'J', 'M', 'P', 'L', 'r', 'i', 0,
  /* 3697 */ 'S', 'R', 'L', 'r', 'i', 0,
  /* 3703 */ 'S', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3710 */ 'U', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3717 */ 'W', 'R', 'W', 'I', 'M', 'r', 'i', 0,
  /* 3725 */ 'A', 'N', 'D', 'N', 'r', 'i', 0,
  /* 3732 */ 'O', 'R', 'N', 'r', 'i', 0,
  /* 3738 */ 'T', 'R', 'A', 'P', 'r', 'i', 0,
  /* 3745 */ 'S', 'W', 'A', 'P', 'r', 'i', 0,
  /* 3752 */ 'C', 'M', 'P', 'r', 'i', 0,
  /* 3758 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'i', 0,
  /* 3766 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'i', 0,
  /* 3774 */ 'W', 'R', 'T', 'B', 'R', 'r', 'i', 0,
  /* 3782 */ 'X', 'N', 'O', 'R', 'r', 'i', 0,
  /* 3789 */ 'X', 'O', 'R', 'r', 'i', 0,
  /* 3795 */ 'W', 'R', 'P', 'R', 'r', 'i', 0,
  /* 3802 */ 'W', 'R', 'A', 'S', 'R', 'r', 'i', 0,
  /* 3810 */ 'L', 'D', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3818 */ 'S', 'T', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3826 */ 'L', 'D', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3834 */ 'S', 'T', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3842 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3851 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3860 */ 'W', 'R', 'P', 'S', 'R', 'r', 'i', 0,
  /* 3868 */ 'S', 'T', 'r', 'i', 0,
  /* 3873 */ 'R', 'E', 'T', 'T', 'r', 'i', 0,
  /* 3880 */ 'S', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3887 */ 'U', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3894 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3905 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3916 */ 'L', 'D', 'S', 'W', 'r', 'i', 0,
  /* 3923 */ 'S', 'R', 'A', 'X', 'r', 'i', 0,
  /* 3930 */ 'S', 'U', 'B', 'X', 'r', 'i', 0,
  /* 3937 */ 'A', 'D', 'D', 'X', 'r', 'i', 0,
  /* 3944 */ 'L', 'D', 'X', 'r', 'i', 0,
  /* 3950 */ 'A', 'N', 'D', 'X', 'r', 'i', 0,
  /* 3957 */ 'S', 'L', 'L', 'X', 'r', 'i', 0,
  /* 3964 */ 'S', 'R', 'L', 'X', 'r', 'i', 0,
  /* 3971 */ 'M', 'U', 'L', 'X', 'r', 'i', 0,
  /* 3978 */ 'X', 'O', 'R', 'X', 'r', 'i', 0,
  /* 3985 */ 'S', 'T', 'X', 'r', 'i', 0,
  /* 3991 */ 'S', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3999 */ 'U', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 4007 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'i', 0,
  /* 4017 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'i', 0,
  /* 4027 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'i', 0,
  /* 4036 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'i', 0,
  /* 4045 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'i', 0,
  /* 4054 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'i', 0,
  /* 4063 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 4072 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 4081 */ 'B', 'P', 'G', 'Z', 'a', 'p', 'n', 0,
  /* 4089 */ 'B', 'P', 'L', 'Z', 'a', 'p', 'n', 0,
  /* 4097 */ 'B', 'P', 'N', 'Z', 'a', 'p', 'n', 0,
  /* 4105 */ 'B', 'P', 'Z', 'a', 'p', 'n', 0,
  /* 4112 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 4122 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 4132 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 4141 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 4150 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 4159 */ 'B', 'P', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 4167 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 4187 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 4206 */ 'L', 'D', 'S', 'B', 'A', 'r', 'r', 0,
  /* 4214 */ 'S', 'T', 'B', 'A', 'r', 'r', 0,
  /* 4221 */ 'L', 'D', 'U', 'B', 'A', 'r', 'r', 0,
  /* 4229 */ 'L', 'D', 'S', 'T', 'U', 'B', 'A', 'r', 'r', 0,
  /* 4239 */ 'L', 'D', 'D', 'A', 'r', 'r', 0,
  /* 4246 */ 'L', 'D', 'A', 'r', 'r', 0,
  /* 4252 */ 'S', 'T', 'D', 'A', 'r', 'r', 0,
  /* 4259 */ 'L', 'D', 'D', 'F', 'A', 'r', 'r', 0,
  /* 4267 */ 'L', 'D', 'F', 'A', 'r', 'r', 0,
  /* 4274 */ 'S', 'T', 'D', 'F', 'A', 'r', 'r', 0,
  /* 4282 */ 'L', 'D', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 4290 */ 'S', 'T', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 4298 */ 'S', 'T', 'F', 'A', 'r', 'r', 0,
  /* 4305 */ 'L', 'D', 'S', 'H', 'A', 'r', 'r', 0,
  /* 4313 */ 'S', 'T', 'H', 'A', 'r', 'r', 0,
  /* 4320 */ 'L', 'D', 'U', 'H', 'A', 'r', 'r', 0,
  /* 4328 */ 'S', 'W', 'A', 'P', 'A', 'r', 'r', 0,
  /* 4336 */ 'S', 'R', 'A', 'r', 'r', 0,
  /* 4342 */ 'C', 'A', 'S', 'A', 'r', 'r', 0,
  /* 4349 */ 'S', 'T', 'A', 'r', 'r', 0,
  /* 4355 */ 'L', 'D', 'S', 'B', 'r', 'r', 0,
  /* 4362 */ 'S', 'T', 'B', 'r', 'r', 0,
  /* 4368 */ 'L', 'D', 'U', 'B', 'r', 'r', 0,
  /* 4375 */ 'S', 'U', 'B', 'r', 'r', 0,
  /* 4381 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'r', 0,
  /* 4390 */ 'S', 'M', 'A', 'C', 'r', 'r', 0,
  /* 4397 */ 'U', 'M', 'A', 'C', 'r', 'r', 0,
  /* 4404 */ 'S', 'U', 'B', 'C', 'r', 'r', 0,
  /* 4411 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'r', 0,
  /* 4420 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'r', 0,
  /* 4429 */ 'A', 'N', 'D', 'C', 'C', 'r', 'r', 0,
  /* 4437 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'r', 0,
  /* 4448 */ 'T', 'I', 'C', 'C', 'r', 'r', 0,
  /* 4455 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'r', 0,
  /* 4464 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4473 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4482 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4491 */ 'O', 'R', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4499 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4508 */ 'X', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4516 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'r', 0,
  /* 4525 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4534 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4543 */ 'T', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4550 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4559 */ 'A', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4566 */ 'L', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4573 */ 'L', 'D', 'C', 'r', 'r', 0,
  /* 4579 */ 'S', 'T', 'D', 'C', 'r', 'r', 0,
  /* 4586 */ 'P', 'O', 'P', 'C', 'r', 'r', 0,
  /* 4593 */ 'S', 'T', 'C', 'r', 'r', 0,
  /* 4599 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'r', 'r', 0,
  /* 4609 */ 'L', 'D', 'D', 'r', 'r', 0,
  /* 4615 */ 'T', 'L', 'S', '_', 'L', 'D', 'r', 'r', 0,
  /* 4624 */ 'A', 'N', 'D', 'r', 'r', 0,
  /* 4630 */ 'B', 'I', 'N', 'D', 'r', 'r', 0,
  /* 4637 */ 'S', 'T', 'D', 'r', 'r', 0,
  /* 4643 */ 'S', 'U', 'B', 'E', 'r', 'r', 0,
  /* 4650 */ 'A', 'D', 'D', 'E', 'r', 'r', 0,
  /* 4657 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'r', 0,
  /* 4667 */ 'S', 'A', 'V', 'E', 'r', 'r', 0,
  /* 4674 */ 'L', 'D', 'D', 'F', 'r', 'r', 0,
  /* 4681 */ 'L', 'D', 'F', 'r', 'r', 0,
  /* 4687 */ 'S', 'T', 'D', 'F', 'r', 'r', 0,
  /* 4694 */ 'L', 'D', 'Q', 'F', 'r', 'r', 0,
  /* 4701 */ 'S', 'T', 'Q', 'F', 'r', 'r', 0,
  /* 4708 */ 'S', 'T', 'F', 'r', 'r', 0,
  /* 4714 */ 'L', 'D', 'S', 'H', 'r', 'r', 0,
  /* 4721 */ 'F', 'L', 'U', 'S', 'H', 'r', 'r', 0,
  /* 4729 */ 'S', 'T', 'H', 'r', 'r', 0,
  /* 4735 */ 'L', 'D', 'U', 'H', 'r', 'r', 0,
  /* 4742 */ 'C', 'A', 'L', 'L', 'r', 'r', 0,
  /* 4749 */ 'S', 'L', 'L', 'r', 'r', 0,
  /* 4755 */ 'J', 'M', 'P', 'L', 'r', 'r', 0,
  /* 4762 */ 'S', 'R', 'L', 'r', 'r', 0,
  /* 4768 */ 'S', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4775 */ 'U', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4782 */ 'W', 'R', 'W', 'I', 'M', 'r', 'r', 0,
  /* 4790 */ 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 4797 */ 'O', 'R', 'N', 'r', 'r', 0,
  /* 4803 */ 'A', 'N', 'D', 'X', 'N', 'r', 'r', 0,
  /* 4811 */ 'O', 'R', 'X', 'N', 'r', 'r', 0,
  /* 4818 */ 'T', 'R', 'A', 'P', 'r', 'r', 0,
  /* 4825 */ 'S', 'W', 'A', 'P', 'r', 'r', 0,
  /* 4832 */ 'C', 'M', 'P', 'r', 'r', 0,
  /* 4838 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'r', 0,
  /* 4846 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'r', 0,
  /* 4854 */ 'W', 'R', 'T', 'B', 'R', 'r', 'r', 0,
  /* 4862 */ 'X', 'N', 'O', 'R', 'r', 'r', 0,
  /* 4869 */ 'X', 'O', 'R', 'r', 'r', 0,
  /* 4875 */ 'W', 'R', 'P', 'R', 'r', 'r', 0,
  /* 4882 */ 'W', 'R', 'A', 'S', 'R', 'r', 'r', 0,
  /* 4890 */ 'L', 'D', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4898 */ 'S', 'T', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4906 */ 'L', 'D', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4914 */ 'S', 'T', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4922 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4931 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4940 */ 'W', 'R', 'P', 'S', 'R', 'r', 'r', 0,
  /* 4948 */ 'C', 'A', 'S', 'r', 'r', 0,
  /* 4954 */ 'S', 'T', 'r', 'r', 0,
  /* 4959 */ 'R', 'E', 'T', 'T', 'r', 'r', 0,
  /* 4966 */ 'S', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4973 */ 'U', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4980 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4991 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 5002 */ 'L', 'D', 'S', 'W', 'r', 'r', 0,
  /* 5009 */ 'S', 'R', 'A', 'X', 'r', 'r', 0,
  /* 5016 */ 'S', 'U', 'B', 'X', 'r', 'r', 0,
  /* 5023 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'X', 'r', 'r', 0,
  /* 5034 */ 'T', 'L', 'S', '_', 'L', 'D', 'X', 'r', 'r', 0,
  /* 5044 */ 'A', 'N', 'D', 'X', 'r', 'r', 0,
  /* 5051 */ 'S', 'L', 'L', 'X', 'r', 'r', 0,
  /* 5058 */ 'S', 'R', 'L', 'X', 'r', 'r', 0,
  /* 5065 */ 'M', 'U', 'L', 'X', 'r', 'r', 0,
  /* 5072 */ 'X', 'N', 'O', 'R', 'X', 'r', 'r', 0,
  /* 5080 */ 'X', 'O', 'R', 'X', 'r', 'r', 0,
  /* 5087 */ 'C', 'A', 'S', 'X', 'r', 'r', 0,
  /* 5094 */ 'S', 'T', 'X', 'r', 'r', 0,
  /* 5100 */ 'S', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 5108 */ 'U', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 5116 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'r', 0,
  /* 5126 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'r', 0,
  /* 5136 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'r', 0,
  /* 5145 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'r', 0,
  /* 5154 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'r', 0,
  /* 5163 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'r', 0,
  /* 5172 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 't', 0,
  /* 5181 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 't', 0,
  /* 5190 */ 'B', 'P', 'G', 'Z', 'a', 'p', 't', 0,
  /* 5198 */ 'B', 'P', 'L', 'Z', 'a', 'p', 't', 0,
  /* 5206 */ 'B', 'P', 'N', 'Z', 'a', 'p', 't', 0,
  /* 5214 */ 'B', 'P', 'Z', 'a', 'p', 't', 0,
  /* 5221 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5231 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5241 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5250 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5259 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5268 */ 'B', 'P', 'Z', 'n', 'a', 'p', 't', 0,
};

extern const unsigned SparcInstrNameIndices[] = {
    1403U, 1679U, 1771U, 1519U, 1510U, 1528U, 1613U, 1287U, 
    1302U, 1267U, 1316U, 2595U, 1240U, 1169U, 3217U, 1198U, 
    2987U, 981U, 1858U, 1601U, 2955U, 1064U, 2944U, 1219U, 
    1936U, 1923U, 2149U, 2781U, 2799U, 1551U, 1580U, 830U, 
    481U, 1641U, 3076U, 3083U, 1659U, 1666U, 959U, 2247U, 
    2225U, 1265U, 1401U, 3162U, 1250U, 2749U, 2466U, 3002U, 
    2483U, 2966U, 2284U, 3011U, 803U, 1232U, 2618U, 1330U, 
    1347U, 836U, 487U, 965U, 934U, 2252U, 2231U, 3139U, 
    1729U, 3122U, 1712U, 1008U, 2768U, 767U, 2648U, 3042U, 
    789U, 2903U, 2891U, 2977U, 1371U, 3035U, 3051U, 1545U, 
    2181U, 2174U, 1906U, 1899U, 2759U, 1182U, 1161U, 1828U, 
    1820U, 1844U, 1836U, 1387U, 1379U, 823U, 474U, 1634U, 
    456U, 3069U, 1652U, 3097U, 1963U, 165U, 1364U, 157U, 
    1280U, 3027U, 779U, 1441U, 1450U, 1881U, 1890U, 1875U, 
    1465U, 2134U, 2844U, 2823U, 2203U, 1867U, 3356U, 4421U, 
    3494U, 4559U, 3585U, 4650U, 797U, 503U, 3937U, 5027U, 
    3531U, 4603U, 1794U, 1948U, 2139U, 1618U, 3364U, 4429U, 
    3417U, 4482U, 3725U, 4790U, 4803U, 3950U, 5044U, 3559U, 
    4624U, 388U, 143U, 409U, 416U, 995U, 441U, 3565U, 
    4630U, 1459U, 511U, 419U, 2864U, 2914U, 4063U, 5172U, 
    4112U, 5221U, 4081U, 5190U, 4132U, 5241U, 624U, 426U, 
    2873U, 2922U, 4072U, 5181U, 4122U, 5231U, 4089U, 5198U, 
    4141U, 5250U, 4097U, 5206U, 4150U, 5259U, 731U, 433U, 
    2882U, 2930U, 4105U, 5214U, 4159U, 5268U, 1205U, 1566U, 
    3677U, 4742U, 0U, 4342U, 5087U, 4948U, 994U, 440U, 
    268U, 95U, 402U, 3752U, 4832U, 235U, 1484U, 1754U, 
    1697U, 62U, 1476U, 1745U, 1689U, 396U, 1492U, 1763U, 
    1705U, 3245U, 4167U, 3265U, 4187U, 1081U, 2042U, 2612U, 
    852U, 1976U, 2410U, 462U, 923U, 16U, 2302U, 173U, 
    2353U, 2438U, 1001U, 448U, 290U, 1051U, 307U, 117U, 
    324U, 134U, 242U, 69U, 251U, 78U, 2036U, 2558U, 
    1094U, 2055U, 2682U, 1997U, 1423U, 2010U, 2524U, 3191U, 
    951U, 858U, 2416U, 816U, 2403U, 1017U, 2016U, 2530U, 
    1057U, 2564U, 1395U, 3090U, 3656U, 4721U, 299U, 1100U, 
    519U, 630U, 737U, 2061U, 584U, 693U, 747U, 1106U, 
    2067U, 2694U, 1126U, 2087U, 2714U, 1116U, 2077U, 2704U, 
    1135U, 2096U, 2723U, 1144U, 2105U, 2732U, 1153U, 2114U, 
    2741U, 2688U, 596U, 703U, 757U, 377U, 354U, 333U, 
    1499U, 3058U, 895U, 365U, 342U, 2004U, 2504U, 873U, 
    2431U, 928U, 2444U, 889U, 1991U, 2498U, 865U, 2423U, 
    901U, 2510U, 2192U, 2576U, 25U, 2312U, 182U, 2363U, 
    915U, 1214U, 2451U, 2188U, 31U, 2319U, 188U, 2370U, 
    2571U, 260U, 87U, 3176U, 227U, 2388U, 54U, 2337U, 
    200U, 1190U, 219U, 2379U, 46U, 2328U, 1023U, 1429U, 
    2536U, 3205U, 316U, 126U, 276U, 103U, 908U, 1087U, 
    2048U, 2675U, 212U, 39U, 10U, 2295U, 151U, 2346U, 
    283U, 110U, 1029U, 1435U, 2022U, 3211U, 810U, 1970U, 
    2397U, 2197U, 2582U, 2220U, 2589U, 1035U, 2028U, 2550U, 
    1852U, 2517U, 3155U, 3690U, 4755U, 4246U, 3810U, 4890U, 
    3508U, 4573U, 4239U, 3501U, 4566U, 4259U, 3609U, 4674U, 
    3548U, 4609U, 4267U, 3826U, 4906U, 3616U, 4681U, 4282U, 
    3629U, 4694U, 4206U, 3290U, 4355U, 4305U, 3649U, 4714U, 
    4229U, 3316U, 4381U, 3916U, 5002U, 4221U, 3303U, 4368U, 
    4320U, 3670U, 4735U, 3842U, 4922U, 3944U, 5038U, 3554U, 
    4619U, 3537U, 3527U, 2938U, 3229U, 3197U, 3374U, 4439U, 
    3390U, 4455U, 4007U, 5116U, 4027U, 5136U, 4017U, 5126U, 
    4036U, 5145U, 4045U, 5154U, 4054U, 5163U, 3104U, 3113U, 
    2542U, 3485U, 4550U, 1041U, 3451U, 4516U, 3971U, 5065U, 
    1919U, 3436U, 4501U, 3426U, 4491U, 3732U, 4797U, 4811U, 
    3979U, 5074U, 3784U, 4864U, 3021U, 1787U, 4586U, 2272U, 
    2267U, 2278U, 2128U, 1673U, 3592U, 4657U, 2791U, 1629U, 
    3873U, 4959U, 3602U, 4667U, 3460U, 4525U, 3991U, 5100U, 
    3880U, 4966U, 529U, 640U, 565U, 676U, 606U, 713U, 
    547U, 658U, 2795U, 3237U, 3222U, 1811U, 1647U, 3957U, 
    5051U, 3684U, 4749U, 3325U, 4390U, 3399U, 4464U, 3703U, 
    4768U, 3923U, 5009U, 3284U, 4336U, 3964U, 5058U, 3697U, 
    4762U, 4349U, 2122U, 4214U, 3297U, 4362U, 3818U, 4898U, 
    3521U, 4593U, 4252U, 3758U, 4838U, 3514U, 4579U, 4274U, 
    3766U, 4846U, 3622U, 4687U, 3572U, 4637U, 4298U, 3834U, 
    4914U, 3643U, 4708U, 4313U, 3664U, 4729U, 4290U, 3636U, 
    4701U, 3851U, 4931U, 3985U, 5094U, 3868U, 4954U, 3347U, 
    4412U, 3339U, 4404U, 3578U, 4643U, 3930U, 5016U, 3310U, 
    4375U, 4328U, 3745U, 4825U, 196U, 208U, 3905U, 4991U, 
    3355U, 4420U, 3383U, 4448U, 5023U, 4599U, 1571U, 5034U, 
    4615U, 3738U, 4818U, 3894U, 4980U, 3346U, 4411U, 3478U, 
    4543U, 3469U, 4534U, 3999U, 5108U, 3887U, 4973U, 3332U, 
    4397U, 3408U, 4473U, 1407U, 3710U, 4775U, 1913U, 1049U, 
    880U, 1982U, 2457U, 2034U, 2556U, 517U, 582U, 594U, 
    3372U, 4437U, 3802U, 4882U, 3795U, 4875U, 3860U, 4940U, 
    3774U, 4854U, 3717U, 4782U, 3185U, 1415U, 3434U, 4499U, 
    5072U, 3782U, 4862U, 3443U, 4508U, 3978U, 5080U, 3789U, 
    4869U, 
};

static inline void InitSparcMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 649);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SparcGenInstrInfo : public TargetInstrInfo {
  explicit SparcGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~SparcGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc SparcInsts[];
extern const unsigned SparcInstrNameIndices[];
extern const char SparcInstrNameData[];
SparcGenInstrInfo::SparcGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 649);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace SP {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace SP {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace SP {
namespace OpTypes {
enum OperandType {
  CCOp = 0,
  MEMri = 1,
  MEMrr = 2,
  TLSSym = 3,
  bprtarget = 4,
  bprtarget16 = 5,
  brtarget = 6,
  calltarget = 7,
  f32imm = 8,
  f64imm = 9,
  getPCX = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  ptype0 = 16,
  ptype1 = 17,
  ptype2 = 18,
  ptype3 = 19,
  ptype4 = 20,
  ptype5 = 21,
  simm13Op = 22,
  type0 = 23,
  type1 = 24,
  type2 = 25,
  type3 = 26,
  type4 = 27,
  type5 = 28,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace SP
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

